Sub-array with 0 sum

Given an array of integers A, find and return whether the given array contains a non-empty subarray with a sum equal to 0.

If the given array contains a sub-array with sum zero return 1 else return 0.

nt Solution::solve(vector<int> &A) {
   /*set<int> S;
   int prefix_sum = 0;
   for(auto a : A){
       prefix_sum += a;
       if(prefix_sum == 0 || S.find(prefix_sum) != S.end()){
           return 1;
       }
       S.insert(prefix_sum);
   }*/

   unordered_map<long, int> M;
   long prefix_sum = 0;
   for(auto a : A){
       prefix_sum += a;
    
       if(prefix_sum == 0){
           return 1;
       }
       if(M.find(prefix_sum) != M.end()){
           return 1;
       }
       M[prefix_sum]++;
   }

   return 0;
}
TC : O(n) SC : O(n)
