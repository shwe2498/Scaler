Distinct Numbers in Window
You are given an array of N integers, A1, A2 ,â€¦, AN and an integer B. Return the of count of distinct numbers in all windows of size B.

Formally, return an array of size N-B+1 where i'th element in this array contains number of distinct elements in sequence Ai, Ai+1 ,..., Ai+B-1.

NOTE: if B > N, return an empty array.
Input 1: A = [1, 2, 1, 3, 4, 3] B = 3 Output 1: [2, 3, 3, 2] Explanation 1: A=[1, 2, 1, 3, 4, 3] and B = 3
 All windows of size B are
 [1, 2, 1]
 [2, 1, 3]
 [1, 3, 4]
 [3, 4, 3]
 So, we return an array [2, 3, 3, 2].

Input 2: A = [1, 1, 2, 2] B = 1 Output 2: [1, 1, 1, 1] Explanation 2: Window size is 1, so the output array is [1, 1, 1, 1].

vector<int> dNums(vector<int> &A, int B) {
    if(B > A.size()) return {};
    vector<int> out;
    int start = 0;
    map<int, int> M;
   
    for(int end = 0; end < A.size(); end++){
        M[A[end]]++;
        if(end - start == B - 1){
            out.push_back(M.size());
            if(M.find(A[start]) != M.end()){
                M[A[start]]--;
                if(M[A[start]] == 0){
                    M.erase(A[start]);
                }
            }
            start++;            
        }
    }
    return out;
}

TC :O(N) SC : O(N)
