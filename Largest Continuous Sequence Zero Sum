/* Largest Continuous Sequence Zero Sum

Given an array A of N integers.
Find the largest continuous sequence in a array which sums to zero.

Input : A = [1,2,-2,4,-4] Output : [2,-2,4,-4]
Explaination : [2,-2,4,-4] is the longest sequence with total sum of zero. */

vector<int> lszero(vector<int> &A) {
    vector<int> out;
    map<int, int> M;
    int sum = 0;
    int start = -1;
    int end = -1;
    int maxlength = INT_MIN;
    M[0] = -1;
    
    for(int i = 0; i < A.size(); i++){
        sum += A[i];
        
        if(M.find(sum) != M.end()){
            if(maxlength < i - M[sum]){
                start = M[sum] + 1;
                end = i;
                maxlength = i - M[sum];
            }
        }
        else{
            M[sum] = i;
        }
    }
    if(start >= 0 && end >= 0){
        for(int j = start; j <= end; j++){
            out.push_back(A[j]);
        }
    }
    return out;
