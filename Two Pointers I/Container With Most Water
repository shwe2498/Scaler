Container With Most Water
Given n non-negative integers A[0], A[1], â€¦, A[n-1] , where each represents a point at coordinate (i, A[i]).

N vertical lines are drawn such that the two endpoints of line i is at (i, A[i]) and (i, 0).

Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.

Input 1: A = [1, 5, 4, 3] Output 1: 6 Explanation 1: 5 and 3 are distance 2 apart. So size of the base = 2. Height of container = min(5, 3) = 3. So total area = 3 * 2 = 6
Input 2: A = [1] Output 2: 0 Explanation 2: No container is formed.

int maxArea(vector<int> &A) {
    int start = 0;
    int end = A.size() - 1;
    int max_container = INT_MIN;

    while(start < end){
        int curr_max = abs(end - start) * min(A[start], A[end]);
        max_container = max(max_container, curr_max);
        if(A[start] > A[end]){
            end--;
        }
        else{
            start++;
        }
    }
    return max_container == INT_MIN ? 0 : max_container;
}

TC :O(N) SC :O(1)
