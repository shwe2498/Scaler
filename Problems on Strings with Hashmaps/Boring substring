Boring substring
You are given a string A of lowercase English alphabets. Rearrange the characters of the given string A such that there is no boring substring in A.

A boring substring has the following properties:

Its length is 2.
Both the characters are consecutive, for example - "ab", "cd", "dc", "zy" etc.(If the first character is C then the next character can be either (C+1) or (C-1)).
Return 1 if it is possible to rearrange the letters of A such that there are no boring substrings in A else, return 0.

Input 1: A = "abcd" Output 1: 1 Explanation 1: String A can be rearranged into "cadb" or "bdac" 
Input 2: A = "aab" Output 2: 0 Explanation 2: No arrangement of string A can make it free of boring substrings.

bool check(string A){
    bool ok = true;
    for(int i = 0; i + 1 < A.size(); i++)
        ok &= (abs(A[i] - A[i + 1]) != 1);
    return ok;
}

int solve(string A) {
    string odd;
    string even;

    for(int i = 0; i < A.size(); i++){
        if(A[i] % 2 == 0)
            odd += A[i];
        else
            even += A[i];
    }

    sort(odd.begin(), odd.end());
    sort(even.begin(), even.end());

    if(check(odd + even))
        return 1;
    if(check(even + odd))
        return 1;
    return 0;
}
