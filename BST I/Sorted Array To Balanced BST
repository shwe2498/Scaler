Sorted Array To Balanced BST
Given an array where elements are sorted in ascending order, convert it to a height Balanced Binary Search Tree (BBST).

Balanced tree : a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of every node never differ by more than 1.
Input 1: A : [1, 2, 3]
Output 1:
      2
    /   \
   1     3
Input 2: A : [1, 2, 3, 5, 10]
Output 2:
      3
    /   \
   2     5
  /       \
 1         10
Explanation 1: You need to return the root node of the Binary Tree.

/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
TreeNode* helper(const vector<int> &A, int low, int high){
    if(low > high) return nullptr;

    int mid = low + (high - low) / 2;
    TreeNode* node = new TreeNode(A[mid]);

    node->left = helper(A, low, mid - 1);
    node->right = helper(A, mid + 1, high);
    return node;
}

TreeNode* sortedArrayToBST(const vector<int> &A) {
    if(A.size() < 2) return new TreeNode(A[0]);
    
    return helper(A, 0, A.size() - 1);
}
