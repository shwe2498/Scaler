Middle element of linked list
Given a linked list of integers. Find and return the middle element of the linked list.

NOTE: If there are N nodes in the linked list and N is even then return the (N/2 + 1)th element.
Input 1: 1 -> 2 -> 3 -> 4 -> 5 Output 1: 3 Explanation 1: The middle element is 3.
Input 2: 1 -> 5 -> 6 -> 2 -> 3 -> 4 Output 2: 2 Explanation 2: The middle element in even length linked list of length N is ((N/2) + 1)th element which is 2.

int solve(ListNode* A) {
    if(!A) return 0;
    if(A && !A->next) return A->val;
    auto slow = A;
    auto fast = A;
    while(fast && fast->next){
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow->val;
}
