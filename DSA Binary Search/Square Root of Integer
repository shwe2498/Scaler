/* Square Root of Integer
Given an integer A.

Compute and return the square root of A.

If A is not a perfect square, return floor(sqrt(A)).

DO NOT USE SQRT FUNCTION FROM STANDARD LIBRARY.

NOTE: Do not use sort function from standard library. Users are expected to solve this in O(log(A)) time.
Input 1: 11 Output 1: 3
Input 2: 9 Output 2: 3

Explanation:

 When A = 11 , square root of A = 3.316. It is not a perfect square so we return the floor which is 3.
 When A = 9 which is a perfect square of 3, so we return 3. */
 
 int sqrt(int A) {
    if(A == 0) return 0;
    int start = 1;
    int end = A;
    int ans = 1;
    while(start <= end){
        int mid = (start + end) / 2;
        if(mid <= A / mid) {
            ans = mid;
            start = mid + 1;
        }
        else {
            end = mid - 1;
        }
    }
    return ans;
}
