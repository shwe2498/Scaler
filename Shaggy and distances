/*
Shaggy and distances

Shaggy has an array A consisting of N elements. We call a pair of distinct indices in that array as a special pair if elements at that index in the array are equal.
Shaggy wants you to find a special pair such that distance between that pair is minimum. Distance between two indices is defined as |i-j|. If there is no special pair in the array then return -1.

Input 1: A = [7, 1, 3, 4, 1, 7] Output : 3 
Explanation 1:
Here we have 2 options:
1. A[1] and A[4] are both 1 so (1,4) is a special pair and |1-4|=3.
2. A[0] and A[5] are both 7 so (0,5) is a special pair and |0-5|=5.
Therefore the minimum possible distance is 3. 


Input 2: A = [1, 1] Output : 1
Explanation 2:
Only possibility is choosing A[1] and A[2].
*/

int solve(vector<int> &A) {
    int min = INT_MAX;
    bool visited = false;
    map<int, int> M;
    for(int i = 0; i < A.size(); i++){
        if(M.find(A[i]) != M.end()){
            int diff = i - M[A[i]];
            if(min > diff){
                visited = true;
                min = diff;
            }
        }
        else{
            M[A[i]] = i;
        }
    }
    return visited ? min : -1;
}
