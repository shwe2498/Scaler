Maximum Absolute Difference

You are given an array of N integers, A1, A2, .... AN.

Return the maximum value of f(i, j) for all 1 ≤ i, j ≤ N. f(i, j) is defined as |A[i] - A[j]| + |i - j|, where |x| denotes absolute value of x.

Input 1: A = [1, 3, -1] Output 1: 5 Explanation 1:
f(1, 1) = f(2, 2) = f(3, 3) = 0
f(1, 2) = f(2, 1) = |1 - 3| + |1 - 2| = 3
f(1, 3) = f(3, 1) = |1 - (-1)| + |1 - 3| = 4
f(2, 3) = f(3, 2) = |3 - (-1)| + |2 - 3| = 5

So, we return 5.
Input 2: A = [2] Output 2: 0 Explanation 2: Only possibility is i = 1 and j = 1. That gives answer = 0.

int maxArr(vector<int> &A) {
    int result = INT_MIN;
    for(int i = 0; i < A.size(); i++){
        for(int j = i + 1; j < A.size(); j++){
            int d = abs(A[i] - A[j]) + abs(i - j);
            if(result < d){
                result = d;
            }
        }
    }
    return result;
}

//TC O(n^2) SC : O(1)

int maxArr(vector<int> &A) {
    int maxxi = INT_MIN;
    int minxi = INT_MAX;
    int maxyi = INT_MIN;
    int minyi = INT_MAX;
    
    for(int i = 0; i < A.size(); i++){
        if(maxxi < A[i] + i) maxxi = A[i] + i;
        if(minxi > A[i] + i) minxi = A[i] + i;
        if(maxyi < A[i] - i) maxyi = A[i] - i;
        if(minyi > A[i] - i) minyi = A[i] - i;
    }
    
    return max(maxxi - minxi, maxyi - minyi);
}

//TC O(n) SC : O(1)
