Right View of Binary tree
Given a binary tree of integers denoted by root A. Return an array of integers representing the right view of the Binary tree.

Right view of a Binary Tree is a set of nodes visible when the tree is visited from Right side.

Input 1:    1
          /   \
         2    3
        / \  / \
       4   5 6  7
      /
     8 
Output 1: [1, 3, 7, 8]
Explanation 1: Right view is described.

Input 2:    1
           /  \
          2    3
           \
            4
             \
              5
Output 2: [1, 3, 4, 5]
Explanation 2: Right view is described.
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
vector<int> solve(TreeNode* A) {
    vector<int> right_nodes;
    if(!A) return right_nodes;

    queue<TreeNode*> queue_node;
    queue_node.push(A);

    while(!queue_node.empty()){
        int n = queue_node.size();
        for(int i = 0; i < n; i++){
            TreeNode* t = queue_node.front();
            queue_node.pop();

            if(i == n - 1)
                right_nodes.push_back(t->val);

            if(t->left)
                queue_node.push(t->left);
            
            if(t->right)
                queue_node.push(t->right);
        }
    }
    return right_nodes;
}
