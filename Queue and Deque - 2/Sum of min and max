Sum of min and max
Given an array A of both positive and negative integers.

Your task is to compute the sum of minimum and maximum elements of all sub-array of size B.

NOTE: Since the answer can be very large, you are required to return the sum modulo 109 + 7.
Input 1: A = [2, 5, -1, 7, -3, -1, -2] B = 4 Output 1: 18 
Explanation 1: Subarrays of size 4 are : 
    [2, 5, -1, 7],   min + max = -1 + 7 = 6
    [5, -1, 7, -3],  min + max = -3 + 7 = 4      
    [-1, 7, -3, -1], min + max = -3 + 7 = 4
    [7, -3, -1, -2], min + max = -3 + 7 = 4   
    Sum of all min & max = 6 + 4 + 4 + 4 = 18 

Input 2: A = [2, -1, 3] B = 2 Output 2: 3
Explanation 2: Subarrays of size 2 are : 
    [2, -1],   min + max = -1 + 2 = 1
    [-1, 3],   min + max = -1 + 3 = 2
    Sum of all min & max = 1 + 2 = 3 

int solve(vector<int> &A, int B) {
    if(A.size() == 1) return A[0];

    deque<int> max_deque;
    deque<int> min_deque;

    const long long MOD = 1000000007;
    int start = 0;
    int end = 0;
    long long sum = 0;

    while(end < A.size()){
        while(!max_deque.empty() && max_deque.back() < A[end]){
            max_deque.pop_back();
        }
        max_deque.push_back(A[end]);

        while(!min_deque.empty() && min_deque.back() > A[end]){
            min_deque.pop_back();
        }
        min_deque.push_back(A[end]);

        if(end - start + 1 == B){
            sum += (max_deque.front() + min_deque.front() + MOD) % MOD;

            if(max_deque.front() == A[start]){
                max_deque.pop_front();
            }

            if(min_deque.front() == A[start]){
                min_deque.pop_front();
            }
            start++;
        }
        end++;
    }
    return sum % MOD;
}
