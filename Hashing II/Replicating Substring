Given a string B, find if it is possible to re-order the characters of the string B so that it can be represented as a concatenation of A similar strings.

Eg: B = aabb and A = 2, then it is possible to re-arrange the string as "abab" which is a concatenation of 2 similar strings "ab".

If it is possible, return 1, else return -1.

Input 1:

 A = 2
 B = "bbaabb"
Input 2:

 A = 1
 B = "bc"


Example Output

Output 1:

 1
Output 2:

 1


Example Explanation

Explanation 1:

 We can re-order the given string into "abbabb".
Explanation 2:

 String "bc" is already arranged.
 
 int solve(int A, string B) {
    unordered_map<char, int> M;
    for(auto c : B){
        M[c]++;
    }
    for(auto m : M){
        if(m.second % A != 0){
            return -1;
        }
    }
    return 1;
}
TC : O(n) SC : O(n)
