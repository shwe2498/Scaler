Longest Substring Without Repeat

Given a string A, find the length of the longest substring without repeating characters.

Note: Users are expected to solve in O(N) time complexity.

Example Input
Input 1: A = "abcabcbb" Output 1: 3 Explanation 1: Substring "abc" is the longest substring without repeating characters in string A.
Input 2: A = "AaaA" Output 2: 2 Explanation 2: Substring "Aa" or "aA" is the longest substring without repeating characters in string A.

int Solution::lengthOfLongestSubstring(string A) {
    int maxLen = 0;
    int start = 0;
    unordered_map<char, int> m;

    for(int end = 0; end < A.size(); ++end){
        if(m.find(A[end]) != m.end()){
            start = max(start, m[A[end]] + 1);
        }
        m[A[end]] = end;
        maxLen = max(maxLen, end - start + 1); 
    }
    return maxLen;
}
