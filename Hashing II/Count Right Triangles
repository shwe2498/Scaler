Count Right Triangles
Given two arrays of integers A and B of size N each, where each pair (A[i], B[i]) for 0 <= i < N represents a unique point (x, y) in 2D Cartesian plane.

Find and return the number of unordered triplets (i, j, k) such that (A[i], B[i]), (A[j], B[j]) and (A[k], B[k]) form a right angled triangle with the triangle having one side parallel to the x-axis and one side parallel to the y-axis.

NOTE: The answer may be large so return the answer modulo (109 + 7).

Input 1: A = [1, 1, 2] B = [1, 2, 1] Output 1: 1 
Explanation 1: All three points make a right angled triangle. So return 1.
Input 2: A = [1, 1, 2, 3, 3] B = [1, 2, 1, 2, 1] Output 2: 6 Explanation 2: 6 quadruplets which make a right angled triangle are: (1, 1), (1, 2), (2, 2)
                                                       (1, 1), (3, 1), (1, 2)
                                                       (1, 1), (3, 1), (3, 2)
                                                       (2, 1), (3, 1), (3, 2)
                                                       (1, 1), (1, 2), (3, 2)
                                                       (1, 2), (3, 1), (3, 2)
                                                       
int solve(vector<int> &A, vector<int> &B) {
    unordered_map<int, int> MA, MB;
    for(auto a : A){
        MA[a]++;
    }

    for(auto b : B){
        MB[b]++;
    }

    long long int cnt = 0;
    for(int i = 0; i < A.size(); i++){
        cnt += 1LL * (MA[A[i]] - 1) * (MB[B[i]] - 1);
        cnt %= 1000000007;
    }
    return cnt;
}

TC : O(N) SC :O(N)
