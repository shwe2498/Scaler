Odds Removed

You are given a 2D integer matrix A having N rows and M columns.

You have to return a 2D matrix containing only even elements in every row.i.e. You have to remove all the odd elements in every row and return the resulting matrix.

NOTE: You are allowed to use extra memory.

Input 1:
  [ [1, 2, 3, 4],
   [4, 5, 6, 7],
   [8, 9, 10, 11],
   [13, 15, 17, 19] ]
Output 1:

 [ [2, 4],
   [4, 6],
   [8, 10],
   [] ]
Explanation 1:
 In row 1, Values 1 and 3 are removed.
 In row 2, Values 5 and 7 are removed.
 In row 3, Values 9 and 11 are removed.
 In row 4, all the values are removed.
   
Input 2:
  [ [5, 17, 1],
   [2, 2, 6] ]
Output 2:

 [ [],
   [2, 2, 6] ]
Explanation 2:
 In row 1, all the values are removed.
 In row 2, no values are removed.
 
 vector<vector<int> > solve(vector<vector<int> > &A) {
    vector<vector<int>> out(A.size());
    for(int i = 0; i < A.size(); i++){
        for(int j = 0; j < A[0].size(); j++){
            if(A[i][j] % 2 == 0){
                out[i].push_back(A[i][j]);
            }
        }
    }
    return out;
}
//TC : O(N*M) SC : O(N*M)
