/* Reverse the String
Given a string A of size N.
Return the string A after reversing the string word by word.

NOTE:
A sequence of non-space characters constitutes a word.
Your reversed string should not contain leading or trailing spaces, even if it is present in the input string.
If there are multiple spaces between words, reduce them to a single space in the reversed string.

Input 1: A = "the sky is blue" Output 1: "blue is sky the"
Input 2: A = "this is ib"  Output 2: "ib is this"  */

void reverse(string& s, int st, int en){
    while(st < en){
        auto t = s[st];
        s[st] = s[en];
        s[en] = t;
        
        st++;
        en--;
    }
}

string solve(string A) {
    /*reverse(A, 0, A.size()+1);
    while(p1 < A.size()){
        while(p2 < A.size() && A[p2] != ' '){
            p2++;
        }
        reverse(A, p1, p2 - 1);
        p1 = p2 - 1;
        p2 = p1;
    }*/
    //A.insert(A.end(), ' ');
    
    int p2 = 0;
    for(int p1 = 0; p1 < A.size()+1; p1++){
        if(A[p1] == ' '){
            reverse(A, p2, p1 - 1);
            p2 = p1 + 1;
        }
    }
    
    A.pop_back();
    
    reverse(A, 0, A.size() - 1);
    
    return A;
}


   
